{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","NONE","Error","reverse","App","useState","setIsReversed","setSortType","isMutated","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUE,cAAcD,MAEjC,MAGF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUI,OAASH,EAAWG,UAEvC,MAGF,KAAKb,EAASc,KACZ,MAGF,QACE,MAAM,IAAIC,MAAM,wBAIpB,OAAOV,EAAaC,EAAaU,UAAYV,G,SAzC1CN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAMiB,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBc,EAAnB,KACA,EAAgCD,mBAASlB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBgB,EAAjB,KAmBMC,EAAYhB,GAAcD,IAAaJ,EAASc,KAEtD,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBlB,IAAaJ,EAASO,UAAY,YAC/DiB,QArBwB,WAC9BJ,EAAYpB,EAASO,WAiBjB,iCAQA,wBACEgB,KAAK,SACLD,UAAS,4BAAuBlB,IAAaJ,EAASY,QAAU,YAChEY,QAzBkB,WACxBJ,EAAYpB,EAASY,SAqBjB,4BAQA,wBACEW,KAAK,SACLD,UAAS,6BAAwBjB,GAAc,YAC/CmB,QAzCa,WACnBL,GAAed,IAqCX,qBASEgB,GAEI,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAxCU,WACtBL,GAAc,GACdC,EAAYpB,EAASc,OAmCX,sBAWR,6BACE,6BACIZ,EAAkBD,EAAiB,CAAEG,WAAUC,eAC9CoB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC9HtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51b6a80e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 0,\n  ALPHABET = 1,\n  LENGTH = 2,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean | null,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET: {\n      visibleGoods.sort((firstGood, secondGood) => {\n        return firstGood.localeCompare(secondGood);\n      });\n      break;\n    }\n\n    case SortType.LENGTH: {\n      visibleGoods.sort((firstGood, secondGood) => {\n        return firstGood.length - secondGood.length;\n      });\n      break;\n    }\n\n    case SortType.NONE: {\n      break;\n    }\n\n    default: {\n      throw new Error('invalid sortType key');\n    }\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverseGoods = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortGoodsAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortGoodsByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const resetGoodsOrder = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const isMutated = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={sortGoodsAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={sortGoodsByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {\n          isMutated\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={resetGoodsOrder}\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          { getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}